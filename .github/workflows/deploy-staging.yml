name: 🚧 Deploy to Staging

on:
  push:
    branches: [develop]
  workflow_dispatch:

jobs:
  deploy-staging:
    name: 🚀 Deploy to Staging Environment
    runs-on: ubuntu-latest
    environment: staging
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: 📥 Install dependencies
        run: npm ci
        
      - name: 🔍 Type check
        run: npm run type-check
        
      - name: 🎨 Check formatting
        run: npm run format:check
        
      - name: 🏗️ Build application
        run: npm run build
        env:
          NODE_ENV: production
          
      - name: 🧪 Run E2E tests
        run: npm run test:ci
        
      - name: 📊 Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: staging-test-results
          path: |
            playwright-report/
            test-results/
          retention-days: 7
          
      # Aqui você pode adicionar o deploy real para seu ambiente de staging
      # Exemplo com Vercel:
      # - name: 🚀 Deploy to Vercel Staging
      #   uses: amondnet/vercel-action@v25
      #   with:
      #     vercel-token: ${{ secrets.VERCEL_TOKEN }}
      #     vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
      #     vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
      #     scope: ${{ secrets.VERCEL_ORG_ID }}
      
      - name: 📝 Comment on PR
        if: github.event_name == 'push'
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const sha = context.sha;
            
            // Encontra PRs relacionados a este commit
            const prs = await github.rest.pulls.list({
              owner,
              repo,
              state: 'open',
              head: `${owner}:develop`
            });
            
            if (prs.data.length > 0) {
              const pr = prs.data[0];
              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number: pr.number,
                body: `🚧 **Staging Deploy Successful!**
                
                ✅ Build completed successfully
                ✅ All tests passed
                🔗 Staging URL: [View deployment](https://your-staging-url.com)
                
                Commit: ${sha.substring(0, 7)}`
              });
            }